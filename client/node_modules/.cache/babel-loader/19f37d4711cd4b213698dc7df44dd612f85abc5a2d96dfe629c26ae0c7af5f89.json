{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\inge_2\\\\devWeb\\\\projetQuizz\\\\client\\\\src\\\\quizz\\\\edit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/header';\nimport { BiSolidTrash } from 'react-icons/bi';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditQuizz = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Récupérer l'ID du quizz depuis l'URL\n  const [quizz, setQuizz] = useState({});\n  const [title, setTitle] = useState('');\n  const [questions, setQuestions] = useState(['']);\n  useEffect(() => {\n    // Effectuer une requête pour récupérer les détails du quizz à éditer\n    axios.get(`http://localhost:3001/api/quizz/${id}`).then(response => {\n      setQuizz(response.data);\n      setTitle(response.data.title);\n      // setQuestions(response.data.questions.map(question => question.libelle));\n    }).catch(error => {\n      console.error('Erreur lors de la récupération des détails du quizz :', error);\n      // Gérer l'erreur\n    });\n  }, [id]);\n  const handleAddQuestion = () => {\n    setQuestions([...questions, '']);\n  };\n  const handleRemoveQuestion = index => {\n    const newQuestions = [...questions];\n    newQuestions.splice(index, 1);\n    setQuestions(newQuestions);\n  };\n  const handleQuestionChange = (index, value) => {\n    const newQuestions = [...questions];\n    newQuestions[index] = value;\n    setQuestions(newQuestions);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.error('No token found');\n      return;\n    }\n    const data = {\n      titre: title,\n      questions: questions.map(question => ({\n        libelle: question\n      }))\n    };\n    axios.put(`http://localhost:3001/api/quizz/${id}`, data, {\n      headers: {\n        'Authorization': token\n      }\n    }).then(response => {\n      console.log('Quizz updated successfully:', response.data);\n      // Rediriger ou afficher un message de succès\n    }).catch(error => {\n      console.error('Erreur lors de la mise à jour du quizz :', error);\n      // Gérer l'erreur\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"mb-4\",\n              children: \"\\xC9dition de formulaire\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"title\",\n                  className: \"form-label\",\n                  children: \"Titre\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"title\",\n                  value: title,\n                  onChange: e => setTitle(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"Questions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    value: question,\n                    onChange: e => handleQuestionChange(index, e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-outline-danger\",\n                    onClick: () => handleRemoveQuestion(index),\n                    children: /*#__PURE__*/_jsxDEV(BiSolidTrash, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 146\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 45\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 41\n                }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-primary mb-3\",\n                  onClick: handleAddQuestion,\n                  children: \"Ajouter une question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: \"Enregistrer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(EditQuizz, \"7EocQ33jfpk+JmDBO7iIc4RjcRc=\", false, function () {\n  return [useParams];\n});\n_c = EditQuizz;\nexport default EditQuizz;\nvar _c;\n$RefreshReg$(_c, \"EditQuizz\");","map":{"version":3,"names":["React","useState","useEffect","Header","BiSolidTrash","useParams","axios","jsxDEV","_jsxDEV","EditQuizz","_s","id","quizz","setQuizz","title","setTitle","questions","setQuestions","get","then","response","data","catch","error","console","handleAddQuestion","handleRemoveQuestion","index","newQuestions","splice","handleQuestionChange","value","handleSubmit","e","preventDefault","token","localStorage","getItem","titre","map","question","libelle","put","headers","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Utilisateur/Documents/inge_2/devWeb/projetQuizz/client/src/quizz/edit.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from '../components/header';\r\nimport { BiSolidTrash } from 'react-icons/bi';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst EditQuizz = () => {\r\n    const { id } = useParams(); // Récupérer l'ID du quizz depuis l'URL\r\n    const [quizz, setQuizz] = useState({});\r\n    const [title, setTitle] = useState('');\r\n    const [questions, setQuestions] = useState(['']);\r\n\r\n    useEffect(() => {\r\n        // Effectuer une requête pour récupérer les détails du quizz à éditer\r\n        axios.get(`http://localhost:3001/api/quizz/${id}`)\r\n            .then(response => {\r\n                setQuizz(response.data);\r\n                setTitle(response.data.title);\r\n                // setQuestions(response.data.questions.map(question => question.libelle));\r\n            })\r\n            .catch(error => {\r\n                console.error('Erreur lors de la récupération des détails du quizz :', error);\r\n                // Gérer l'erreur\r\n            });\r\n    }, [id]);\r\n\r\n    const handleAddQuestion = () => {\r\n        setQuestions([...questions, '']);\r\n    };\r\n\r\n    const handleRemoveQuestion = (index) => {\r\n        const newQuestions = [...questions];\r\n        newQuestions.splice(index, 1);\r\n        setQuestions(newQuestions);\r\n    };\r\n\r\n    const handleQuestionChange = (index, value) => {\r\n        const newQuestions = [...questions];\r\n        newQuestions[index] = value;\r\n        setQuestions(newQuestions);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            console.error('No token found');\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            titre: title,\r\n            questions: questions.map(question => ({ libelle: question }))\r\n        };\r\n\r\n        axios.put(`http://localhost:3001/api/quizz/${id}`, data, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n        .then(response => {\r\n            console.log('Quizz updated successfully:', response.data);\r\n            // Rediriger ou afficher un message de succès\r\n        })\r\n        .catch(error => {\r\n            console.error('Erreur lors de la mise à jour du quizz :', error);\r\n            // Gérer l'erreur\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center mt-5\">\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"card p-4\">\r\n                            <h2 className=\"mb-4\">Édition de formulaire</h2>\r\n                            <form onSubmit={handleSubmit}>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"title\" className=\"form-label\">Titre</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} required />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label\">Questions</label>\r\n                                    {questions.map((question, index) => (\r\n                                        <div key={index} className=\"input-group mb-3\">\r\n                                            <input type=\"text\" className=\"form-control\" value={question} onChange={(e) => handleQuestionChange(index, e.target.value)} required />\r\n                                            <button type=\"button\" className=\"btn btn-outline-danger\" onClick={() => handleRemoveQuestion(index)}><BiSolidTrash /></button>\r\n                                        </div>\r\n                                    ))}\r\n                                    <button type=\"button\" className=\"btn btn-primary mb-3\" onClick={handleAddQuestion}>Ajouter une question</button>\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Enregistrer</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditQuizz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}