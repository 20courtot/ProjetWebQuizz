{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\inge_2\\\\devWeb\\\\projetQuizz\\\\client\\\\src\\\\quizz\\\\create.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Envoi des données d'inscription à votre backend\n      const response = await axios.post('http://localhost:3001/users/register', {\n        firstName,\n        lastName,\n        email,\n        password\n      });\n\n      // Traiter la réponse du serveur (par exemple, rediriger l'utilisateur vers une autre page)\n      console.log('Réponse du serveur :', response.data);\n    } catch (error) {\n      // Gérer les erreurs (par exemple, afficher un message d'erreur à l'utilisateur)\n      console.error('Erreur lors de l\\'inscription :', error.response.data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"A61mcRXNapOcGHN5EK5jhYP4ZY4=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Register","_s","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","response","post","console","log","data","error","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Utilisateur/Documents/inge_2/devWeb/projetQuizz/client/src/quizz/create.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Register = () => {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            // Envoi des données d'inscription à votre backend\r\n            const response = await axios.post('http://localhost:3001/users/register', {\r\n                firstName,\r\n                lastName,\r\n                email,\r\n                password\r\n            });\r\n\r\n            // Traiter la réponse du serveur (par exemple, rediriger l'utilisateur vers une autre page)\r\n            console.log('Réponse du serveur :', response.data);\r\n        } catch (error) {\r\n            // Gérer les erreurs (par exemple, afficher un message d'erreur à l'utilisateur)\r\n            console.error('Erreur lors de l\\'inscription :', error.response.data.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMc,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACA;MACA,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,sCAAsC,EAAE;QACtEZ,SAAS;QACTE,QAAQ;QACRE,KAAK;QACLE;MACJ,CAAC,CAAC;;MAEF;MACAO,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,QAAQ,CAACI,IAAI,CAAC;IACtD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ;MACAH,OAAO,CAACG,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACL,QAAQ,CAACI,IAAI,CAACE,OAAO,CAAC;IACjF;EACJ,CAAC;EAED,oBACIpB,OAAA;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEd,CAAC;AAACtB,EAAA,CA/BID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}